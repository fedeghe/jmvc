   _  __  __ __     __ ____ 
  (_)|  \/  |\ \   / //  __|
  | || |\/| | \ \ / / | |    
  | || |  | |  \ v /  | |__ 
 _/ ||_|  |_|   \_/   \____|
|__/                      

Description: jmvc module

Author: Federico Ghedina
Version: 0.1
Date : 26-01-2012


Installation
------------
Thanks to a basic .htaccess jmcv access point is an index.html which loads in the head the main script
and is meant to have empty body, in fact the whole body will be rewritten (see index.html)
NOTE: the src attribute of the script must be the absolute url for jmvc.js
All you have to do is, write controllers, models and views.


Features
--------
- cross-browser
- no global variables, no collision are possible
- url dispatching
- load views and models (synchronous ajax requests, otherwise eval is late) from a controller
- default controller and action (inherited 'index')
- each view has his own hash to contain variables.
- in views you can write special variable placeholders for other views or for view's variable:
  >	$variable_name$ for variable
  > {{my_view}} for a view
  these will be replaced with the element content (recusively parsed, within 10 nesting level)
- dinamically load other scripts and stylesheets 
- the content produced affects ONLY the content of the body, You can edit the head with some limitations using JMVC.head methods (or external scripts)
- 2.9Kb (minified and packed)
- totally seo unfriendly pages
- automatic extra parameters from url
- automatic extra parameters from querystring


Url structure
-------------
Supposing we're using virtual host http://www.jmvc.dev , a location will be 

something like: http://www.jmvc.dev / controller_name / action_name / var1/val1/var2/val2/var3 ? var4=Fred&var5=notme&var1=foo
                '-----------------'   '-------------'   '---------'   '----------------------'   '----------------------------'
                         A                   A               A                   A                            A
> proto+domain ----------'                   |               |                   |                            |
                                             |               |                   |                            |
> controller -------------------------------'                |                   |                            |
                                                             |                   |                            |
> action ---------------------------------------------------'                    |                            |
                                                                                 |                            |
> parameters -------------------------------------------------------------------'                             |
                                                                                                              |
> get params (do not override previous) ---------------------------------------------------------------------'


NOTE: parameters are meant to be even, in the controller You will be able
      to access and use 2 variables: var1="val1" and var2="val2"; the third
      one will be ignored because unvalued.

Try it
------
The fastest way to try it out is to create a virtual host or put it online (ex: http://www.jmvc.dev)



API
---

Controller: 
> addvar(String varname, Mixed value);
> getvar(String varname);
> delvar(String varname);
> relocate(uri location);

View:
> addvar(String varname, Mixed value);
> getvar(String varname);
> delvar(String varname);
> render();

Model:
no api
