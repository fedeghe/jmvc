<function>
    <signature name="each">JMVC.each(obj, fn)</signature>
    <description>Loop over an object literal or Array, the callback at each cycle will receive the object and his index. As far as the callback has a name, the two `continue` and `break` function are available</description>
    <params>
        <param name="*obj">the object to loop Object literal or Array</param>
        <param name="*fn">the loop callback</param>
    </params>
    <returns>void (undefined)</returns>
    <sample>&#10;
var obj = {name:'Federico', surname : 'Ghedina', says : 'wat'},&#10;
    arr = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10],&#10;
    objAfter = JMVC.each(obj, function (el, i) {&#10;
        console.debug(i, el);&#10;
    }),&#10;
    arrAfter = JMVC.each(arr, function f(el, i) {&#10;
        if (i % 2) { //will skip odd indexed elements&#10;
            f.continue();&#10;
        }&#10;
        return i;&#10;
    });&#10;
console.debug(obj, objAfter);&#10;
console.debug(arr, arrAfter);&#10;</sample>
    <status>testing</status>
    <testlink>test_api_jmvc_each</testlink>
</function>