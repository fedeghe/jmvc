<function>
    <signature name="extend">JMVC.extend(String section, Literal extension)</signature>
    <description>Extends JMVC object with Your objects</description>
    <params>
        <param name="*section"> that parameter is needed to set the namespace under which Your functions will be added to JMVC; valid values are `foo` or `foo1.foo2.foo3` or even `foo1/foo2/foo3`</param>
        <param name="*extension">this object literal defines all the functions in your extension (JMVC is in that scope, so You can use it)</param>
    </params>
    <returns>void (undefined)</returns>
    <status>testing</status>
    <sample>JMVC.extend('fooWidget', {&#10;
    // if specified, will lock the extension&#10;
    // for any value returned but true&#10;
    initCheck : function () {&#10;
        alert('init check');&#10;
        return true;&#10;
    },&#10;
    // if specified, will be executed immediately&#10;
    init : function () {&#10;
        alert('init fooWidget');&#10;
    },&#10;
    // ... specify your methods&#10;
    start : function () {&#10;
        alert('doing foo');&#10;
    }&#10;
    // ...&#10;
});&#10;
JMVC.fooWidget.start();
    </sample>
    <testlink>test_api_jmvc_extend</testlink>
    <code>JMVC.extend('fooWidget', {initCheck : function () {alert('init check');return true;},init : function () {alert('init fooWidget');},start : function () {alert('doing foo');}});JMVC.fooWidget.start();</code>
</function>