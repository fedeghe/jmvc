<function>
    <signature name="Promise">JMVC.Promise(String name)</signature>
    <description>Retrieves a variable from the global JMVC scope</description>
    <params>
        <param name="*name">the name of the new variable to be removed</param>
    </params>
    <returns>the variable reference or value</returns>
    <status>incomplete</status>
    <sample>function t(){&#10;
    var p = new JMVC.Promise();&#10;
    window.setTimeout(function () {&#10;
        console.log('uan');&#10;
        p.done();&#10;
    }, 2000);&#10;
    return p;&#10;
};&#10;
t().then(function(){console.log('two');})&#10;
   .then(function(){console.log('tree');});</sample>
<status>complete</status>
    <code>
function t(){
    var p = new JMVC.Promise();
    window.setTimeout(function () {
        console.log('uan');
        p.done();
    }, 2000);
    return p;
};
t().then(function(){console.log('two');})
   .then(function(){console.log('tree');});
    </code>
</function>