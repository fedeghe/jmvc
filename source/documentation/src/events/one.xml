<function>
    <signature name="one">JMVC.events.one(Element el, String type, Javascript function fun)</signature>
    <description>binds only once a callback to an event fired from an element</description>
    <params>
        <param name="*el">dom element target</param>
        <param name="*type">the event string</param>
        <param name="*func">Javascript function callback</param>
    </params>
    <returns>void (undefined)</returns>
    <status>incomplete</status>
	<sample>/*&#10;this code is executed within the wired callback of the play button handler thus, I kill the event, cause bubbling is slower than binding and without killing it the click on play button will trigger the cb call&#10;*/&#10;&#10;
JMVC.events.kill(arguments[0]);&#10;
JMVC.events.one(document.body,&#10;
    'click', function() {&#10;
        console.debug('clicked')&#10;
    }&#10;
);&#10;
&#10;
/*&#10;
the click on the play button will bind and the event will bubble to the body wchich would execute the cb if the event is not killed&#10;
*/</sample>
    <code>
        JMVC.events.kill(arguments[0]);
        JMVC.events.one(document.body, 'click', function(e) {
            console.debug('clicked ', e);
        });
</code>
</function>