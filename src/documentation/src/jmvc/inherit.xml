<function>
    <signature name="inherit">JMVC.inherit(Object child, Object parent)</signature>
    <description>Implements a true inheritance (D.C. way if you prefer)</description>
    <params>
        <param name="*child">the child object that must inherit</param>
        <param name="*parent">the parent object that will share his prototype with the `foo middle object`</param>
    </params>
    <returns>void (undefined)</returns>
    <status>complete</status>
    <sample>var Person = function (name, age) {&#10;
        this.name = name;&#10;
        this.age = age;&#10;
    },&#10;
    Parent = function (){},&#10;
    Child = function (name) {&#10;
        this.name = name;&#10;
    };&#10;
Person.prototype.getName = function () {&#10;
    console.log('my name is '+ this.name);&#10;
};&#10;
JMVC.inherit(Child, Parent, Person);&#10;
&#10;
var c = new Child('Gabriele');&#10;
c.getName();</sample>
    <code>var Person = function (name, age) {
    this.name = name;
    this.age = age;
  },
  Parent = function (){},
  Child = function (name) {
    this.name = name;
  };
Person.prototype.getName = function () {
  console.log('my name is '+ this.name);
};
JMVC.inherit(Child, Parent, Person);

var c = new Child('Gabriele');
c.getName();</code>
    <testlink>test_api_jmvc_inherit</testlink>
</function>